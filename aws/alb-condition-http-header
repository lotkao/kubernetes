# AWS ALB - Conditional http-header
# Taken from: https://github.com/kubernetes-sigs/aws-load-balancer-controller/issues/2278#issuecomment-1835417338
# Documented but easily overlooked: https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/ingress/annotations/#conditions
# When you write alb.ingress.kubernetes.io/conditions.SERVICENAME, you have to give your backend service that SERVICENAME.


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress-name
  namespace: ns
  labels:
  app: my-app-name
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/subnets: subnet-1a,subnet-1b
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/conditions.myservicename: >
      [{"field":"http-header","httpHeaderConfig":{"httpHeaderName":"HEADER-NAME","values":["HEADER-VALUE"]}}]
  spec:
    ingressClassName: alb
    rules:
      - http:
        paths:
          - path: /path-or-just-a-slash-for-all-paths
            pathType: Prefix
            backend:
              service:
                name: my-service-name
                port:
                number: 80

                  
# Important to use the ">" after the annotation or Kubernetes will give back the error "json: cannot unmarshal array into Go struct field ObjectMeta.metadata.annotations of type string"
# This comment helped me fix some other issues using helmfile values, where I previously capitulated and just hardcoded them into the templates using if statements.
